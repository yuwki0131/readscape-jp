server:
  port: 8080
  servlet:
    context-path: /api

spring:
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://postgres:5432/readscape_prod}
    username: ${DATABASE_USERNAME:readscape_prod_user}
    password: ${DATABASE_PASSWORD:readscape_prod_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 30
      minimum-idle: 10
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 30000
      validation-timeout: 5000
      leak-detection-threshold: 10000
      connection-test-query: SELECT 1

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: readscape
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true

  data:
    redis:
      enabled: ${REDIS_ENABLED:true}
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      database: ${REDIS_DATABASE:0}
      password: ${REDIS_PASSWORD:}
      timeout: 3000ms
      jedis:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: 2000ms

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

# Security Configuration
jwt:
  secret: ${JWT_SECRET}
  expiration: 3600000
  refresh-expiration: 2592000000

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:https://readscape.jp,https://www.readscape.jp}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# Application Configuration
app:
  name: Readscape-JP Consumer API
  version: "@project.version@"
  description: 書籍販売システム Consumer API (Production)
  environment: production

# Rate Limiting
rate:
  limit:
    anonymous: 100
    authenticated: 1000
    window: 3600

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: never
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    jp.readscape: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] [%logger{36}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] [%logger{36}] - %msg%n"
  file:
    name: logs/consumer-api.log
    max-size: 100MB
    max-history: 30

# Performance Optimization
server:
  tomcat:
    threads:
      max: 200
      min-spare: 10
    max-connections: 8192
    accept-count: 100
    connection-timeout: 20s
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/css,application/javascript
    min-response-size: 1024